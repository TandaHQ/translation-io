// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Arg = require("bs-platform/lib/js/arg.js");
var Block = require("bs-platform/lib/js/block.js");
var Process = require("process");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Init$TranslationIo = require("./Init.bs.js");
var Sync$TranslationIo = require("./Sync.bs.js");
var Config$TranslationIo = require("./Config.bs.js");
var Extract$TranslationIo = require("./Extract.bs.js");

var sub = [/* None */0];

var verbose = [false];

var configPath = [/* None */0];

function subcommand_parse(subcommand) {
  switch (subcommand) {
    case "extract" : 
        sub[0] = /* Some */[/* Extract */2];
        return /* () */0;
    case "init" : 
        sub[0] = /* Some */[/* Init */1];
        return /* () */0;
    case "sync" : 
        sub[0] = /* Some */[/* Sync */0];
        return /* () */0;
    default:
      return /* () */0;
  }
}

var speclist_000 = /* tuple */[
  "-V",
  /* Set */Block.__(2, [verbose]),
  "Enable verbose mode"
];

var speclist_001 = /* :: */[
  /* tuple */[
    "--verbose",
    /* Set */Block.__(2, [verbose]),
    "Enable verbose mode"
  ],
  /* :: */[
    /* tuple */[
      "-c",
      /* String */Block.__(4, [(function (s) {
              configPath[0] = /* Some */[s];
              return /* () */0;
            })]),
      "The config string to use"
    ],
    /* :: */[
      /* tuple */[
        "--config",
        /* String */Block.__(4, [(function (s) {
                configPath[0] = /* Some */[s];
                return /* () */0;
              })]),
        "The config string to use"
      ],
      /* [] */0
    ]
  ]
];

var speclist = /* :: */[
  speclist_000,
  speclist_001
];

Arg.parse(speclist, subcommand_parse, "Print a thing");

var config = Config$TranslationIo.load(configPath[0]);

var match = sub[0];

if (match) {
  switch (match[0]) {
    case 0 : 
        Sync$TranslationIo.run(config);
        break;
    case 1 : 
        Init$TranslationIo.run(config);
        break;
    case 2 : 
        Extract$TranslationIo.run(config);
        break;
    
  }
} else {
  console.log("You must choose a subcommand: sync,init,extract");
  Process.exit(1);
  throw Pervasives.Exit;
}

exports.sub = sub;
exports.verbose = verbose;
exports.configPath = configPath;
exports.subcommand_parse = subcommand_parse;
exports.speclist = speclist;
exports.config = config;
/*  Not a pure module */
